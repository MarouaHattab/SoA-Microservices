syntax = "proto3";

package property;

service PropertyService {
  rpc GetProperty (PropertyRequest) returns (PropertyResponse);
  rpc SearchProperties (PropertySearchRequest) returns (PropertySearchResponse);
  rpc CreateProperty (CreatePropertyRequest) returns (PropertyResponse);
  rpc UpdateProperty (UpdatePropertyRequest) returns (PropertyResponse);
  rpc DeleteProperty (PropertyRequest) returns (DeleteResponse);
  
  // Nouvelles méthodes pour les notes et commentaires
  rpc AddReview (AddReviewRequest) returns (ReviewResponse);
  rpc GetPropertyReviews (PropertyRequest) returns (PropertyReviewsResponse);
  rpc UpdateReview (UpdateReviewRequest) returns (ReviewResponse);
  rpc DeleteReview (DeleteReviewRequest) returns (DeleteResponse);
  
  // Méthodes pour les favoris
  rpc AddToFavorites (FavoriteRequest) returns (FavoriteResponse);
  rpc RemoveFromFavorites (FavoriteRequest) returns (FavoriteResponse);
  rpc GetUserFavorites (UserFavoritesRequest) returns (PropertySearchResponse);
}

message PropertyRequest {
  string id = 1;
}

message PropertySearchRequest {
  string location = 1;
  float min_price = 2;
  float max_price = 3;
  int32 bedrooms = 4;
  int32 bathrooms = 5;
  float min_area = 6;
  string property_type = 7;
  int32 page = 8;
  int32 limit = 9;
}

message CreatePropertyRequest {
  string title = 1;
  string description = 2;
  float price = 3;
  string location = 4;
  string address = 5;
  int32 bedrooms = 6;
  int32 bathrooms = 7;
  float area = 8;
  string property_type = 9;
  string owner_id = 10;
  repeated string features = 11;
  repeated string images = 12;
}

message UpdatePropertyRequest {
  string id = 1;
  string title = 2;
  string description = 3;
  float price = 4;
  string location = 5;
  string address = 6;
  int32 bedrooms = 7;
  int32 bathrooms = 8;
  float area = 9;
  string property_type = 10;
  string owner_id = 11;
  repeated string features = 12;
  repeated string images = 13;
}

message Property {
  string id = 1;
  string title = 2;
  string description = 3;
  float price = 4;
  string location = 5;
  string address = 6;
  int32 bedrooms = 7;
  int32 bathrooms = 8;
  float area = 9;
  string property_type = 10;
  string owner_id = 11;
  repeated string features = 12;
  repeated string images = 13;
  string created_at = 14;
  string updated_at = 15;
  float average_rating = 16;
  int32 total_ratings = 17;
  repeated string favorited_by = 18;
}

message PropertyResponse {
  Property property = 1;
}

message PropertySearchResponse {
  repeated Property properties = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 limit = 4;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

// Nouveaux messages pour les reviews
message AddReviewRequest {
  string property_id = 1;
  string user_id = 2;
  string user_name = 3;
  int32 rating = 4;
  string comment = 5;
}

message UpdateReviewRequest {
  string review_id = 1;
  string user_id = 2;
  int32 rating = 3;
  string comment = 4;
}

message DeleteReviewRequest {
  string review_id = 1;
  string user_id = 2;
}

message Review {
  string id = 1;
  string property_id = 2;
  string user_id = 3;
  string user_name = 4;
  int32 rating = 5;
  string comment = 6;
  string created_at = 7;
  string updated_at = 8;
}

message ReviewResponse {
  Review review = 1;
}

message PropertyReviewsResponse {
  repeated Review reviews = 1;
  float average_rating = 2;
  int32 total_reviews = 3;
}

// Nouveaux messages pour les favoris
message FavoriteRequest {
  string property_id = 1;
  string user_id = 2;
}

message UserFavoritesRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message FavoriteResponse {
  bool success = 1;
  string message = 2;
}