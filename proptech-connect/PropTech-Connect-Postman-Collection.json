{
	"info": {
		"_postman_id": "3a5ad1b7-72db-4e39-8cf3-e8092d7b9e8d",
		"name": "PropTech Connect API Tests",
		"description": "Test collection for the PropTech Connect microservices architecture",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Service",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"auth_token\", jsonData.token);",
									"pm.environment.set(\"user_id\", jsonData.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser{{$timestamp}}@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"buyer\",\n    \"phone\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"auth_token\", jsonData.token);",
									"pm.environment.set(\"user_id\", jsonData.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{existing_user_email}}\",\n    \"password\": \"{{existing_user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Retrieve user profile information"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"phone\": \"+1987654321\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update user profile information"
					},
					"response": []
				}
			],
			"description": "Tests for the User Service functionality"
		},
		{
			"name": "Property Service",
			"item": [
				{
					"name": "Search Properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/properties?location=New York&min_price=100000&max_price=500000&bedrooms=2&bathrooms=1&property_type=apartment&page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties"
							],
							"query": [
								{
									"key": "location",
									"value": "New York"
								},
								{
									"key": "min_price",
									"value": "100000"
								},
								{
									"key": "max_price",
									"value": "500000"
								},
								{
									"key": "bedrooms",
									"value": "2"
								},
								{
									"key": "bathrooms",
									"value": "1"
								},
								{
									"key": "property_type",
									"value": "apartment"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Search for properties with specific criteria"
					},
					"response": []
				},
				{
					"name": "Get Property Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"property_id\", jsonData.property.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/properties/{{existing_property_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"{{existing_property_id}}"
							]
						},
						"description": "Get details for a specific property"
					},
					"response": []
				},
				{
					"name": "Create Property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"new_property_id\", jsonData.property.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modern Apartment in Downtown\",\n    \"description\": \"Beautiful modern apartment with spectacular views\",\n    \"price\": 250000,\n    \"location\": \"New York\",\n    \"address\": \"123 Main St, New York, NY 10001\",\n    \"bedrooms\": 2,\n    \"bathrooms\": 2,\n    \"area\": 1200,\n    \"property_type\": \"apartment\",\n    \"features\": [\"balcony\", \"parking\", \"central air\"],\n    \"images\": [\"https://example.com/image1.jpg\", \"https://example.com/image2.jpg\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/properties",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties"
							]
						},
						"description": "Create a new property listing"
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Apartment Title\",\n    \"price\": 275000,\n    \"features\": [\"balcony\", \"parking\", \"central air\", \"gym access\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/properties/{{new_property_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"{{new_property_id}}"
							]
						},
						"description": "Update an existing property listing"
					},
					"response": []
				},
				{
					"name": "Add Property Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"review_id\", jsonData.review.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rating\": 4,\n    \"comment\": \"Great property with excellent amenities\",\n    \"hidden\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/properties/{{existing_property_id}}/reviews",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"{{existing_property_id}}",
								"reviews"
							]
						},
						"description": "Add a review for a property"
					},
					"response": []
				},
				{
					"name": "Add to Favorites",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"property_id\": \"{{existing_property_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/properties/favorites",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"favorites"
							]
						},
						"description": "Add a property to user favorites"
					},
					"response": []
				},
				{
					"name": "Get User Favorites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/properties/favorites",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"favorites"
							]
						},
						"description": "Get all favorited properties for the user"
					},
					"response": []
				},
				{
					"name": "Delete Property",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/properties/{{new_property_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"properties",
								"{{new_property_id}}"
							]
						},
						"description": "Delete a property listing"
					},
					"response": []
				}
			],
			"description": "Tests for the Property Service functionality"
		},
		{
			"name": "Appointment Service",
			"item": [
				{
					"name": "Create Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"appointment_id\", jsonData.appointment.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"property_id\": \"{{existing_property_id}}\",\n    \"date\": \"2024-08-15T14:00:00Z\",\n    \"duration\": 60,\n    \"type\": \"viewing\",\n    \"message\": \"I'd like to view this property\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						},
						"description": "Schedule a property viewing appointment"
					},
					"response": []
				},
				{
					"name": "Get User Appointments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						},
						"description": "List all appointments for the current user"
					},
					"response": []
				},
				{
					"name": "Get Appointment Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						},
						"description": "Get detailed information about a specific appointment"
					},
					"response": []
				},
				{
					"name": "Update Appointment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2024-08-16T15:00:00Z\",\n    \"duration\": 90,\n    \"message\": \"I need to reschedule and would like more time for the viewing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						},
						"description": "Update an existing appointment"
					},
					"response": []
				},
				{
					"name": "Cancel Appointment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						},
						"description": "Cancel an existing appointment"
					},
					"response": []
				}
			],
			"description": "Tests for the Appointment Service functionality"
		},
		{
			"name": "Chat Service",
			"item": [
				{
					"name": "Create Chat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"chat_id\", jsonData.chat.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipient_id\": \"{{recipient_user_id}}\",\n    \"property_id\": \"{{existing_property_id}}\",\n    \"initial_message\": \"Hello, I'm interested in this property\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat"
							]
						},
						"description": "Start a new chat conversation about a property"
					},
					"response": []
				},
				{
					"name": "Get User Chats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat"
							]
						},
						"description": "Get all chat conversations for the current user"
					},
					"response": []
				},
				{
					"name": "Get Chat Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/chat/{{chat_id}}/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"{{chat_id}}",
								"messages"
							]
						},
						"description": "Get all messages in a specific chat conversation"
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"I'd like to know more about the neighborhood\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/chat/{{chat_id}}/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"{{chat_id}}",
								"messages"
							]
						},
						"description": "Send a message in an existing chat conversation"
					},
					"response": []
				}
			],
			"description": "Tests for the Chat Service functionality"
		},
		{
			"name": "Notification Service",
			"item": [
				{
					"name": "Get User Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/notifications",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications"
							]
						},
						"description": "Retrieve all notifications for the current user"
					},
					"response": []
				},
				{
					"name": "Mark Notification as Read",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"read\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/notifications/{{notification_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"{{notification_id}}"
							]
						},
						"description": "Mark a notification as read"
					},
					"response": []
				},
				{
					"name": "Update Notification Preferences",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email_notifications\": true,\n    \"push_notifications\": true,\n    \"property_alerts\": true,\n    \"appointment_reminders\": true,\n    \"chat_notifications\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/notifications/preferences",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"preferences"
							]
						},
						"description": "Update notification preferences for the current user"
					},
					"response": []
				}
			],
			"description": "Tests for the Notification Service functionality"
		},
		{
			"name": "GraphQL API",
			"item": [
				{
					"name": "Query Properties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"query { properties(location: \\\"New York\\\", limit: 5) { id title price location bedrooms bathrooms area property_type } }\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Query properties using GraphQL"
					},
					"response": []
				},
				{
					"name": "Query Property Details",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"query { property(id: \\\"{{existing_property_id}}\\\") { id title description price location address bedrooms bathrooms area property_type features images created_at updated_at average_rating } }\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Query detailed property information using GraphQL"
					},
					"response": []
				},
				{
					"name": "User Profile and Appointments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"query { me { id name email role phone appointments { id property_id date status } } }\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Query user profile and appointments using GraphQL"
					},
					"response": []
				}
			],
			"description": "Tests for the GraphQL API"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "existing_user_email",
			"value": "user@example.com",
			"type": "string"
		},
		{
			"key": "existing_user_password",
			"value": "Password123",
			"type": "string"
		},
		{
			"key": "existing_property_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "recipient_user_id",
			"value": "",
			"type": "string"
		}
	]
} 